---
title: simple functions
inMenu: true
---

h2. Simple functions

The original gallery can be found
"there":http://gnuplot.sourceforge.net/demo_4.6/simple.html.

{fight: plots/simple.1}

In @ctioga2@, you have to select the {command: math} backend before
you can plot mathematical functions.

In the absence of the {command: auto-legend}, @ctioga2@ simply does
not give legends to datasets that don't already have an explicit
legend.

{fight: plots/simple.2}


{fight: plots/simple.3}

Here, the command {command: xrange} is necessary as in @ctioga2@, the
X range of the mathematical function is not related to the X range of
the display: by default, the display fits the contents, and as there
are no points outside the [-1:1] segment, @ctioga2@ automatically
zooms into that segment.

{fight: plots/simple.4}

Here, you might consider that @ctioga2@ is cheating. The truth is that
@ctioga2@ acknowledges that manipulating mathematical functions is
easier with gnuplot, that has many special functions and very good
handling of complexes. Using the {command: gnuplot} backend, you can
"directly use data from plots of a gnuplot command file":../tutorial/02-datafiles.html#bidule, 
which is what we had to do here to access bessel functions.

Note that for @ctioga2@, a curve can be drawn with both markers and
lines (it is not exclusive), hence the necessity to cancel line
drawing using @/line-style=no@ and indicate a marker to be used with
@/marker=Cross@.

{fight: plots/simple.5}

As for the previous example, we use the {command: gnuplot} backend to
access to the bessel function.

{fight: plots/simple.6}

As of now, @ctioga2@ does not support setting legends below the
graph. 

{fight: plots/simple.7}

{fight: plots/simple.8}

The above makes use of three data files, "@1.dat@":plots/1.dat,
"@2.dat@":plots/2.dat and "@3.dat@":plots/3.dat, that are just
multiples of the arctangent function on integers from -20 to 19.
