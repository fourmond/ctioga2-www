---
title: Axes and labels
inMenu: true
orderInfo: 4
---
h2. Customizing the look of axes and labels

Here are ways to tweak various things about axes and things.

h3. Alternative X or Y axes

It is possible to use different axes for different curves in a single
plot, using @--y2@ or @--x2@:

{ctCmdline: plots/axes-labels-1.ct2-sh }

This example also shows how to define the label for the current X and
Y axes; the @-x@ and @-y@ commands provide many options to fine-tune
the look of the labels.

h3. X and Y ranges

It is possible to define the X and Y ranges of the plot thus: 

{ctCmdline: plots/axes-labels-2.ct2-sh }

Alternatively, it is possible to use @--margin@ to leave a certain
fraction of the plots around the data points; to make the reading
easier. In this case, we leave 3%:

{ctCmdline: plots/axes-labels-3.ct2-sh }

h3. Log plots

It is possible to use a log scale by passing the @--xlog@ or @--ylog@
commands:

{ctCmdline: plots/axes-labels-4.ct2-sh }


h3. Tweaking the looks of axes

It is possible to change the look of each of the sides of the plot
individually using the @--axis-style@ and the companion
@--label-style@ commands that set the style of the axis and of the
labels respectively.

{ctCmdline: plots/axes-labels-5.ct2-sh }

h3. Controlling tick position and labels

Starting from @ctioga2@ version @0.6@, it is possible to control the
appearance and position of major ticks and tick labels, through the
use of the {command: ticks} command or through various options to the
{command: axis-style} command: 

{ctCmdfile: plots/axes-labels-6.ct2 }

The @/format@ argument to the {command: ticks} command is interpreted
as a
"@sprintf@":http://ruby-doc.org/core-1.9.3/Kernel.html#method-i-sprintf 
format specification.

You have basically three options to control the position of the axes
ticks. You may specify an approximate number of major ticks for the
whole graph, specify the difference between two successive ticks, and
finally specify by hand the position of all ticks, all this using the
{command: ticks} command. First, difference and number:

{ctCmdfile: plots/axes-labels-6-1.ct2 }

For the bottom axis, this says that there should be at least 7 major
ticks and exactly 3 minor ticks between each major one. For the left
axis, minor ticks are placed every multiple of two while the major
ticks are placed every multiple of 5. Note that there is no need for
the minor ticks to be evenly spaced between the major ticks.

While these possibilities will be enough for most cases where
@ctioga2@'s default values don't suit you, you can have even more
control by specifying directly the position of the ticks using the
@/major@ and @/minor@ options to the {command: ticks} command:

{ctCmdfile: plots/axes-labels-7.ct2 }

See how the background lines follow the position
of the major ticks.

Here, we disabled the ticks on the top axis using {command: top} as
they would still follow the usual convention, which would have a
disconcerting effect. A simple way to take care of that is to use
variables:

{ctCmdfile: plots/axes-labels-7-bis.ct2 }

Using the @/labels@ option, you can even specify the exact label for
all the ticks. The price to pay for that level of control is that you
*must* provide manually the location for all the major ticks (and the
minor ones if you want them to show up too).

{ctCmdfile: plots/axes-labels-8.ct2 }


h3. Non-linear axes

With @ctioga2@, making non-linear additional axes is just a matter of
specifying the transformation between the linear axis and the
non-linear one, using the @/transform@ option to the axis style
command (here {cmd: top}):

{ctCmdfile: plots/axes-labels-9.ct2 }

In the general case, you have to specify the formula for changing the
from linear to non-linear and *back*, unless it is an involution
(which is the case here). Separate the formulas with a @:@.

