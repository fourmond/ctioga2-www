---
title: Curve style
inMenu: true
---
h2. Customizing the style of curves

@ctioga2@ provides an automatic styling of curves:

{ctCmdline: plots/curve-style-1.ct2-sh }

As can be seen, the first curves are displayed in various colors (red,
green, blue and cyan), up to the @--color-set pastel1@ command, that instructs
@ctioga2@ to use another color set, @pastel1@, for subsequent
curves. Line style had not changed so far, but it starts to change at
each curve after the @--line-style auto@ command. As a side note,
@--yoffset@ is used here to shift the second set of curves from the
first one.

h3. Overrides

It is possible to override some of the styles either for one curve, or
definitely for the following curves:

{ctCmdline: plots/curve-style-2.ct2-sh }

Commands, such as @--line-style Solid@ override until further use of
this command; using @auto@ as a parameter lifts the overrides. Using
an option, such as here @/color Purple@ allows one to override the
style element just for a single curve.

Commands handling the sets or overrides are all found within the
"curve style":../doc/commands.html#group-curve-style command group.

h3. Markers

It is possible to indicate the position of data points on a curve with
symbols, that are called markers in Tioga's nomenclature: 

{ctCmdline: plots/curve-style-3.ct2-sh }

As can be seen above, the markers symbol, size and color can be tuned
using the options or the corresponding commands. The list of accepted
symbol names can be found in 
"Tioga's documentation":http://tioga.rubyforge.org/doc/classes/Tioga/MarkerConstants.html.

Something that comes in useful with markers is the possibility to
disable lines altogether this way:

{ctCmdline: plots/curve-style-4.ct2-sh }


h3. Error bars

This is still to be written.

h3. Filled curves

Curves in @ctioga2@ can be filled to a certain level using the
@--fill@ command, that takes precisely this level as an argument. See:

{ctCmdline: plots/curve-style-5.ct2-sh }

By default, the filling has the same color as the lines of the curve,
and it can be made transparent, which allows for neat effects such as:

{ctCmdline: plots/curve-style-6.ct2-sh }

@ctioga2@ can also fill the region between two curves, but that is
another story told "somewhere else":region.html...

h3. Gradients

@ctioga2@ provides a neat way to plot lots of curves with a linearly
changing color. Behold:

{ctCmdline: plots/curve-style-7.ct2-sh }

Here, a trick needs to be explained: the @0##12@ is expanded by
@ctioga2@ into several dataset as @0@, @1@, @2@... up until @12@
(which is the reason why there are 13 curves).

The old way of making gradient in @ctioga@, using a @gradient: @
dataset is still supported, but is clearly behing the new way.

h3. More about sets

While predefined sets may suit you, it is possible to build custom
sets directly on the fly:

{ctCmdline: plots/curve-style-8.ct2-sh }

Let's analyse in details. We have 7 curves (from @0@ to @6@, ie from
bottom to top). The color set specification, @Red|Blue|Green@
instructs @ctioga2@ to use these three colors each in turn for each
curve. Now, the line style specification, @Solid|Dots*3@, instructs to
use *3 times* the @Solid@ line style, then *3 times* the @Dots@ line
style. Combining these possibilities makes for very easy play with
colors/markers/line styles...

